/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package InterfacesGraficas;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author JJ
 */
public class VisitationInterface extends javax.swing.JPanel {

    /**
     * Creates new form VisitationInterface
     */
    public VisitationInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        visitorTitle = new javax.swing.JLabel();
        addVisitationDate = new javax.swing.JTextField();
        inmateId = new javax.swing.JLabel();
        addRelationship = new javax.swing.JTextField();
        visitationDate1 = new javax.swing.JLabel();
        addVisitorName = new javax.swing.JTextField();
        visitorName1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        selectInmates = new javax.swing.JTextArea();
        searchInmateButton = new javax.swing.JButton();
        visitorRelationship = new javax.swing.JLabel();
        addInmateId2 = new javax.swing.JTextField();
        submitVisitorButton = new javax.swing.JButton();

        visitorTitle.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        visitorTitle.setText("Visitor creation formulary");

        addVisitationDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVisitationDateActionPerformed(evt);
            }
        });

        inmateId.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        inmateId.setText("Inmate ID");

        addRelationship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRelationshipActionPerformed(evt);
            }
        });

        visitationDate1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        visitationDate1.setText("Visitation date");

        addVisitorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVisitorNameActionPerformed(evt);
            }
        });

        visitorName1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        visitorName1.setText("Visitor name");

        selectInmates.setColumns(20);
        selectInmates.setRows(5);
        selectInmates.setName(""); // NOI18N
        jScrollPane1.setViewportView(selectInmates);

        searchInmateButton.setText("Search");
        searchInmateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInmateButtonActionPerformed(evt);
            }
        });

        visitorRelationship.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        visitorRelationship.setText("Relationship");

        addInmateId2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInmateId2ActionPerformed(evt);
            }
        });

        submitVisitorButton.setText("Submit");
        submitVisitorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitVisitorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(109, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addVisitationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addVisitorName, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(179, 179, 179))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(visitorName1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(inmateId, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(searchInmateButton)
                                .addGap(52, 52, 52))
                            .addComponent(addInmateId2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(addRelationship, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(167, 167, 167))
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(visitationDate1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(submitVisitorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(visitorTitle)
                        .addGap(209, 209, 209))))
            .addGroup(layout.createSequentialGroup()
                .addGap(321, 321, 321)
                .addComponent(visitorRelationship)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(visitorTitle)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(visitationDate1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addVisitationDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchInmateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(inmateId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addInmateId2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(visitorName1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addVisitorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addComponent(visitorRelationship)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addRelationship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(submitVisitorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addVisitationDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVisitationDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addVisitationDateActionPerformed

    private void addRelationshipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRelationshipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addRelationshipActionPerformed

    private void addVisitorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVisitorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addVisitorNameActionPerformed
    public static Connection connect() throws SQLException {
        //Realizing the connection to the database
        String url = "jdbc:mysql://localhost:3306/prision";
        String user = "root";
        String password = "";

        return DriverManager.getConnection(url, user, password);
    }
    private void searchInmateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInmateButtonActionPerformed
        // Cleaning the TextArea before realize another query
        selectInmates.setText("");

        // SQL sentence
        String sql = "SELECT * FROM inmate";

        try (Connection conn = connect(); Statement stmt = conn.createStatement(); ResultSet resultSet = stmt.executeQuery(sql)) {

            // Iterating between the results and showing it at the TextArea
            while (resultSet.next()) {
                int id = resultSet.getInt("inmate_ID");
                String name = resultSet.getString("name");
                String bornDate = resultSet.getString("born_date");
                String entranceDate = resultSet.getString("inserction_date");
                String exitDate = resultSet.getString("exit_date");
                String status = resultSet.getString("status");
                String crime = resultSet.getString("crime");

                selectInmates.append("ID: " + id
                        + ", Name: " + name
                        + ", Born Date: " + bornDate
                        + ", Entrance Date: " + entranceDate
                        + ", Exit Date: " + exitDate
                        + ", Status: " + status
                        + ", Crime: " + crime + "\n");
            }
            //Handling Exceptions
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al realizar la consulta: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchInmateButtonActionPerformed

    private void addInmateId2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInmateId2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addInmateId2ActionPerformed

    private void submitVisitorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitVisitorButtonActionPerformed
        /*I have made a DateFormat and a .setLenient to delimitate the 
        default values from String to use it later on the query as a Date with 
        only a correct format
         */
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        dateFormat.setLenient(false);

        try {
            // Parsear las fechas desde los campos de texto
            Date visitationDate = dateFormat.parse(addVisitationDate.getText());

            // Convertir java.util.Date a java.sql.Date
            java.sql.Date sqlVisitationDate = new java.sql.Date(visitationDate.getTime());

            // Obtener los valores restantes de la GUI
            String visitorName = addVisitorName.getText();
            String relationship = addRelationship.getText();
            int inmate_ID = Integer.parseInt(addInmateId2.getText());

            // Consulta SQL para insertar los valores de la GUI en la base de datos
            String sql = "INSERT INTO visitation (visitation_date, inmate_ID, visitor_name, relationship) VALUES (?, ?, ?, ?)";

            try (Connection conn = connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
                // Establecer los parámetros de la consulta
                stmt.setDate(1, sqlVisitationDate);
                stmt.setInt(2, inmate_ID);
                stmt.setString(3, visitorName);
                stmt.setString(4, relationship);

                // Ejecutar la consulta
                int rowsAffected = stmt.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Visitation inserted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to insert visitation", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error inserting into the database", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ParseException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Invalid date format. Please use dd/MM/yyyy.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrisonInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrisonInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrisonInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrisonInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VisitationInterface().setVisible(true);
            }
        });
    }//GEN-LAST:event_submitVisitorButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addInmateId2;
    private javax.swing.JTextField addRelationship;
    private javax.swing.JTextField addVisitationDate;
    private javax.swing.JTextField addVisitorName;
    private javax.swing.JLabel inmateId;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchInmateButton;
    private javax.swing.JTextArea selectInmates;
    private javax.swing.JButton submitVisitorButton;
    private javax.swing.JLabel visitationDate1;
    private javax.swing.JLabel visitorName1;
    private javax.swing.JLabel visitorRelationship;
    private javax.swing.JLabel visitorTitle;
    // End of variables declaration//GEN-END:variables
}
